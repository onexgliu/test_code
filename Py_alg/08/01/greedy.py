def change():
    d = [0.1, 0.5, 1.0, 5.0, 10.0, 20.0, 50.0, 100.0]  # 存储每种钱币面值
    d_num = []  # 存储每种钱币的数量
    s = 0
    # 拥有的零钱总和
    temp = input('请输入每种面值钱币的数量：')
    d_num0 = temp.split(" ")  # 用空格将每种零钱数量分割
    for i in range(0, len(d_num0)):  # 遍历每个空格
        d_num.append(int(d_num0[i]))  # 给存储钱币数量列表补充空格
        s += d[i] * d_num[i]  # 计算出收银员拥有多少钱
    sum = float(input("请输入需要找的零钱:"))
    if sum > s:
        # 当输入的总金额比收银员的总金额多时，无法进行找零
        print("数据有错")
        return 0
    s = s - sum  # 收银员的总金额减去输入的总金额
    # 要想用的钱币数量最少，那么需要利用所有面值大的钱币，因此从数组的面值大的元素开始遍历，贪心算法开始
    i = 6  # 列表最大坐标
    while i >= 0:  # 循环找零
        if sum >= d[i]:  # 输入的总金额大于或者等于每个零钱面值数，才进行找零
            n = int(sum / d[i])  # 用输入的总金额从列表的最后一个元素开始整除，计算的是找每种面值的个数
            if n >= d_num[i]:  # 如果计算n大于等于每个面值个数
                n = d_num[i]  # 更新n
            sum -= n * d[i]  # 贪心的关键步骤，令sum动态的改变，
            print("找了%d个%.2f元钱" % (n, d[i]))  # 输出需要找每种面值的情况
        i -= 1  # 改变i的值用来结束循环


change()  # 直接调用函数
